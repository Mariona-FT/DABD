Instruccions utilitzades en la sessió 7:

descarregar les seguents carpetes en ubiwan:
- dins de ubiwan!
$ cd /home/public/dabd/
cu@ubiwan:/home/public/dabd$ cp -r 07/ /home/est/userubi/DABD/sessio7

Copiar en una carpeta local.

1) Executa l'script bigger.py per crear la base de dades bigger.db que conté 4 taules (comptes, adreces, titulars, contractes) amb molts registres.


Executar el script bigger.py:
mariona@mariona-laptop:~/Documentos/altres-DABD/sessio7/sessio7$ python3 bigger.py 
900 comptes will be inserted.
500 adreces will be inserted.
1000 titulars will be inserted.
4000 contractes will be inserted.

On es crearà un fitxer de base de dades: bigger.bd

2) Obre la base de dades bigger.db amb el client de terminal sqlite3 i executa aquestes comandes (la comanda pragma index_list(taula) permet consultar els índexs que hi ha associats a la taula):

Entrar amb sqlite3:
mariona@mariona-laptop:~/Documentos/altres-DABD/sessio7/sessio7$ sqlite3 bigger.db 
SQLite version 3.37.2 2022-01-06 13:25:41
Enter ".help" for usage hints.

Veure les taules creades amb el seu schema:

sqlite> .schema
CREATE TABLE comptes(
    acc_id bigint NOT NULL PRIMARY KEY,
    type char(1) NOT NULL,
    balance float NOT NULL
  );
CREATE TABLE adreces(
    address varchar(100) NOT NULL PRIMARY KEY,
    phone varchar(20) DEFAULT NULL UNIQUE
  );
CREATE TABLE titulars(
    owner_id int NOT NULL PRIMARY KEY,
    address varchar(100) NOT NULL REFERENCES adreces ON UPDATE CASCADE
  );
CREATE TABLE contractes(
    acc_id bigint NOT NULL REFERENCES comptes ON UPDATE CASCADE,
    owner_id int NOT NULL REFERENCES titulars ON UPDATE CASCADE,
    owner varchar(40) NOT NULL,
    PRIMARY KEY(acc_id, owner_id)
  );
  
Activar els headers:
sqlite> .headers on

Veure els esquemes de les taules per ceure els índex associats aquestes taules:

sqlite> pragma INDEX_List(comptes);
seq|name|unique|origin|partial
0|sqlite_autoindex_comptes_1|1|pk|0

sqlite> pragma INDEX_List(adreces);
seq|name|unique|origin|partial
0|sqlite_autoindex_adreces_2|1|u|0
1|sqlite_autoindex_adreces_1|1|pk|0
//Te 2INDEXOS - té PK i UNIQUE

sqlite> pragma INDEX_List(titulars);
seq|name|unique|origin|partial
0|sqlite_autoindex_titulars_1|1|pk|0

sqlite> pragma INDEX_List(contractes);
seq|name|unique|origin|partial
0|sqlite_autoindex_contractes_1|1|pk|0

Taules de informació del sistema:
- Sqlite_master: definició de taules i índex de les bd, amb ROOTPAGE-> on es troba situat l'arrel de l'arbre B-tree corresponent

sqlite> SELECT * FROM sqlite_master;
type|name|tbl_name|rootpage|sql
table|comptes|comptes|2|CREATE TABLE comptes(
    acc_id bigint NOT NULL PRIMARY KEY,
    type char(1) NOT NULL,
    balance float NOT NULL
  )
index|sqlite_autoindex_comptes_1|comptes|3|
table|adreces|adreces|14|CREATE TABLE adreces(
    address varchar(100) NOT NULL PRIMARY KEY,
    phone varchar(20) DEFAULT NULL UNIQUE
  )
index|sqlite_autoindex_adreces_1|adreces|15|
index|sqlite_autoindex_adreces_2|adreces|16|
table|titulars|titulars|37|CREATE TABLE titulars(
    owner_id int NOT NULL PRIMARY KEY,
    address varchar(100) NOT NULL REFERENCES adreces ON UPDATE CASCADE
  )
index|sqlite_autoindex_titulars_1|titulars|38|
table|contractes|contractes|57|CREATE TABLE contractes(
    acc_id bigint NOT NULL REFERENCES comptes ON UPDATE CASCADE,
    owner_id int NOT NULL REFERENCES titulars ON UPDATE CASCADE,
    owner varchar(40) NOT NULL,
    PRIMARY KEY(acc_id, owner_id)
  )
index|sqlite_autoindex_contractes_1|contractes|58|

-  sqlite_stat1:Estadístiques de cadacun dels índex, nombre del registre total i el nombre de registres mitja que obtindriem al usar aquest índex:

sqlite> ANALYZE;
sqlite> SELECT * FROM sqlite_stat1;
tbl|idx|stat
contractes|sqlite_autoindex_contractes_1|4000 5 1
titulars|sqlite_autoindex_titulars_1|1000 1
adreces|sqlite_autoindex_adreces_2|500 1
adreces|sqlite_autoindex_adreces_1|500 1
comptes|sqlite_autoindex_comptes_1|900 1

Executar el script de consultes:

mariona@mariona-laptop:~/Documentos/altres-DABD/sessio7/sessio7$ python3 consulta_bigger.py 
Fem 10000 cerques
Temps total:  0:00:01.209025

On triga més de 1segon en fer les cerques.
El que es pot fer es CREAR UN ÍNDEX EN SQLITE

Mariona@mariona-laptop:~/Documentos/altres-DABD/sessio7/sessio7$ sqlite3 bigger.db 
SQLite version 3.37.2 2022-01-06 13:25:41
sqlite> CREATE INDEX idx_contractes_owner ON contractes(owner);
sqlite> .quit

Ara si ho tornem a executar:
mariona@mariona-laptop:~/Documentos/altres-DABD/sessio7/sessio7$ python3 consulta_bigger.py 
Fem 10000 cerques
Temps total:  0:00:00.149168

Només haura trigat uns 0.2 segons


