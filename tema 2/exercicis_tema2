Exercicis Teoria tema 2:

11 Transport internacional
Una importantíssima empresa catalana dedicada al transport internacional (àmbit europeu)
de mercaderies, ens demana que li dissenyem una base de dades per facilitar certs aspectes de la gestió de la informació. Després d’estudiar el tema hem escrit aquestes notes en què es descriuen els aspectes que ens han semblat importants. Aquestes notes han estat acceptades com a correctes per l’empresa.

11.1 Organització internacional
L’empresa disposa de delegacions repartides per tota la geografia europea. Tota delegació
té un nom assignat que és com se la coneix. En una ciutat pot haver com a màxim una
delegació.
Es vol tenir un directori de ciutats (o poblacions) amb el nom amb què es coneixen a
Catalunya i el seu nom original. Suposem que en el context en què es mou l’empresa, no hi
ha dues poblacions amb el mateix nom.

DELEGACIO 0.1_______ubicacio__________1 CIUTAT	
+nom					+nom
					+nomoriginal

Clau primaria : Delegacio - nom , Ciutat - nom
una ciutat una sola delegació
una delegació  ha d’existir en una ciutat 


11.2 Conductors i clients
Dels conductors contractats per l’empresa es vol disposar de la informació següent: codi
intern (és un nombre donat per l’empresa, amb el qual s’identifiquen els conductors), nom
i any de naixement. Els conductors es divideixen en dos grans grups:
Propis, dels quals interessa conèixer el seu nivell d’estudis (codi d’un caràcter) i el seu salari.
Subcontractats, dels quals interessa l’any d’obtenció del carnet de conduir.
Els conductors no estan associats a cap delegació. Cada conductor viu en una ciutat.
Els clients solen ser grans empreses multinacionals. S’identifiquen per un codi de client.
De cada client es vol disposar del seu nom d’empresa i telèfon.

DELEGACIO 0.1_______ubicacio__________1 CIUTAT	
+nom					+nom
					+nomoriginal
						1..1
						|
						| vivenda
						|
						0..*
CLIENT					CONDUCTOR	
+ codi					+codi
+nom_empr				+nom
+telefon				+any_neix
					      ↑
		         -------------------|--------------------
			↓					↓
			PROPIS				SUBCONTRACTAT
			+nivell_estudis			+any_carnet
			+salari
			
Clau primaria: Client - codi , Conductor - codi
Subcategories de Conductor: Propis , Subcontractat



11.3 Activitat de transport
Els viatges que efectua l’empresa no estan estandarditzats (al contrari de les agències de
viatges turístics). S’organitzen un a un segons les necessitats puntuals dels clients i són
organitzats per les delegacions. 
Cada delegació identifica cada viatge amb un codi numèric.
En un viatge hi poden participar més d’un conductor (la normativa legal exigeix que en els
viatges llargs hi hagi més d’un conductor, i que aquests es vagin tornant).
Per a cada viatge es vol saber quin conductor o conductors l’han realitzat i les seves
dietes. A cada conductor se li assigna una dieta per cada viatge concret (en un mateix
viatge poden cobrar diferent import els diferents conductors i el mateix conductor pot tenir
dietes diferents en diferents viatges).

DELEGACIO 0.1_______ubicacio__________1 CIUTAT	
+nom					+nom
 1					+nomoriginal
|		DIETA				1-*	
|organitzacio	+import				|
|		 |				|			      
 1..*		 |				|
VIATGE 0.*--------------			|
+codi			|			|
 0..*			|			|
|			|			| vivenda
|contractacio		|			|
|			|			|
 1			|			0..*
CLIENT			------------1.* CONDUCTOR	
+ codi					+codi
+nom_empr				+nom
+telefon				+any_neix
					      ↑
		         -------------------|--------------------
			↓					↓
			PROPIS				SUBCONTRACTAT
			+nivell_estudis			+any_carnet
			+salari
			
Viatge- identitat feble- delegació identifica el viatge no es independent
Dieta -classe relacional entre Viatge i conductor
Claus primaria: Viatge - codi - identitat feble organitzats per delegacions

Esquema relacional:
CLIENT (codi INT AUTOINCREMENT PK,
 	nomemp TEXT NOT NULL, 
	telefon TEXT NOT NULL UNIQUE )
CIUTAT (nom TEXT PK,
	nomoriginal TEXT NOT NULL)
DELEGACIO (nom TEXT PK, 
	ubicacio TEXT FK REFERENCES (CIUTAT.nom) NOT NULL) 
CONDUCTOR (codi INT AUTOINCREMENT PK,
	nom TEXT NOT NULL, 
	any_neixament  DATE NOT NULL ,
	vivenda TEXT FK REFERENCES (ciutat.nom) NOT NULL)
PROPIS (codi INT PK FK REFERENCES (conductor.codi),
 	nivell_estudis CHAR NOT NULL, 
	salari FLOAT NOT NULL)
SUBCONTRACTAT (codi INT PK FK REFERENCES (conductor.codi),	
	any_carnet DATE NOT NULL)
VIATGE (codi INT,  
	organitzacio TEXT FK REFERENCES (delegacio.nom), PK, 
	 codiclient INT FK REFERENCES(client.codi) NOT NULL)
DIETA ( {codiconductor INT FK REFERENCE(conductor.codi), 
	codiviatge INT FK REFERENCES (viatge.codi), 
	organitzacio TEXT FK REFERENCE (viatge.organitzacio) ) } PK, 
	import FLOAT NOT NULL)


3 Comptes bancaris
Considerem un context d’activitat bancària representat mitjançant una única relació, amb
els següents atributs:
• número d’un compte bancari; acc_id
• classe del compte (corrent, estalvis, llibreta…): type
• saldo; balance
• nom del titular del compte (un mateix compte pot tenir diversos titulars, que apareixen
documentats en tuples diferents); owner
• adreça, telèfon i NIF del titular.
Alguns titulars apareixen amb noms diferents; sabem que es tracta del mateix titular
quan el seu NIF coincideix. 
El telèfon és fix, no mòbil; per tant, persones que visquin en la mateixa direcció tenen
també el mateix telèfon. address, phone, owner_id

Taula antiga accounts:
accounts(acc_id,type,balance,owner,owner_id, address, phone)

Dependències funcionals:
 ower_id -> address, phone (persona només viu en un lloc)
 phone -> address
 address->phone (telefon fixe i adreça fixe)
	NO address, phone -> owner_id (mateixa adreça pot viure +d'una persona) 
 	NO owner_id-> owner (poden tenir varis noms)
 	NO owner ->owner_id  (un nom no determina el id, problema si noms iguals)
 acc_id ->balance, type (determinats per la account)
 acc_id, owner_id -> owner (dif account amb mateix un owner id tenen noms diferents)
  
 TAULES:
 R1 (owner_id,address) PK: owner_id  FK: adress=R2.address
 R2 (address,phone)  PK: address, UNIQUEK:phone
 R3 (acc_id, balance,type)  PK: acc_id
 R4 (acc_id, owner_id,owner) PK:acc_id, owner_id FK: acc_id=R3.acc_id, owner_id=R1.owner_id
 
 nom taules:
 R1: titulars (owner_id,address) PK: owner_id  FK: adress=Adreces.address
 R2: adreces (address,phone)  PK: address, UNIQUEK:phone
 R3: comptes (acc_id, balance,type)  PK: acc_id
 R4: contractes (acc_id, owner_id,owner) PK:acc_id, owner_id FK: acc_id=Comptes.acc_id, 
 								owner_id=titulars.owner_id
 
 NORMALITZAT AMB BCNF - totes dependències en forma de CLAU (owner_id,phone,address,acc_id)
  	i 3NF
  	
  	(Clau forana es la clau primària de la taula destí)
  (UNIQUE KEY-quan ja tens una PRIMARY KEY ja establerta pero l'atribut es pot comportar com una clau de la taula)
  	
 UML:
 
 COMPTES 0.*________________1.* TITULARS 1.*________viu_______1	ADRECES
 +acc_id	|		+owner_id			+address
 -type		|		-				-phone (UK)
 -balance	|
		|
		CONTRACTES
		-owner
 									
 +=Pk							
 									
 								
 							
 Variants:
1. cada compte té un únic titular
2. cada persona només pot ser titular d’un compte
3. cada persona només pot ser titular d’un compte de cada classe
4. una persona no té una única direcció sinó potser diverses (Personal, laboral, segona
residència…) i a més en cadascuna d’elles pot haver-hi diversos telèfons


2 Felicitacions d’aniversari
El nostre amic John ara viu a Barcelona, però ha viscut en molts països i coneix moltes
llengües, i té una enorme llista d’amics repartits per tot el món. Té una col·lecció de
missatges de ’feliç aniversari’, curosament redactats perquè qualsevol missatge serveixi per
a qualsevol persona, i va afegint nous missatges de tant en tant per repetir menys. Té
muntat un sistema automàtic que envia un e-mail de felicitació d’aniversari el dia adequat
a la persona adequada, tots els anys, triant aleatòriament el text del missatge.


Missatge - M
Persona - P
Data aniversari - D
Any - A
Email - E
Paisos - PA
Idiomes - I
P→D
P A /→ M
P A → E
E → P , A ,M 

=>finals:

P→D
P A → E
E → P , A ,M 
M → I


R1(P, A) - PK:P
R2(A) - PK:A
R3(P, A, E, M) - PK:E , UK: P, A
R4(M) - PK:M

Variants:
1. John no vol repetir el mateix missatge mai a persones que visquin a la mateixa ciutat,
ni tan sols en anys diferents.

Ciutat- C

R1(P, A, C) - PK:P
R2(E, M, P, A ) - PK:E , UK: P, A
R3(M,I) - PK:M
R4(M,I) - PK:M
R5(PA)
R6(I)

==> Resultat
R1(P,D)- PK:P
R2(E,C,M,P,A)- PK:E , UK:C,M  UK: P,A
	Combinació: Ciutat missatge - únic - no cal fer-ho en software
	COmbinació: Persona any - únic - 
R3(M,I)- PK:M

=>finals variant:

P→D,C
P A → E
E → P , A ,M 
M → I
M, C → E

2. Darrerament John va escàs de temps per preparar nous missatges, i no obstant això la
seva llista d’amigues està creixent bastant (igual és per això que va escàs de temps).
Com John s’ha adonat que, d’un any per l’altre, gairebé ningú es recorda del missatge,
no li importa repetir el mateix missatge a persones diferents de la mateixa ciutat però
només si és en anys diferents.

3. Cada amic de John coneix un o diversos idiomes; cada missatge pot tenir diverses
versions, cada versió en un idioma. Per descomptat, John no enviarà un missatge
escrit en una llengua a una persona que no coneix aquest idioma.



--REIS MAGS I HOTELS



